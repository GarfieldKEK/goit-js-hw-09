{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKP,IAAMO,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAKN,IAJA,IAAMC,EAAQC,SAASP,EAAKP,MAAMe,OAC5BC,EAAOF,SAASP,EAAKS,KAAKD,OAC1BE,EAASH,SAASP,EAAKU,OAAOF,OAE3BG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGL,GAASK,EAAI,GAAKF,GAChCG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE3DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAI,sBAAqCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delay = parseInt(form.delay.value);\n  const step = parseInt(form.step.value);\n  const amount = parseInt(form.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.7009720f.js.map"}